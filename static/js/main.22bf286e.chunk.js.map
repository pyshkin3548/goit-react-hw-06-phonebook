{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/transitionsStyles/fade.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/Alert/Alert.module.css","components/transitionsStyles/appearFormStyles.module.css","components/transitionsStyles/searchFadeStyles.module.css","App.module.css","components/Container/Container.module.css","components/transitionsStyles/appear.module.css","components/Title/Title.module.css","components/transitionsStyles/fadeAlertStyle.module.css","components/ContactList/ContactList.module.css","components/Container/Container.js","components/Title/Title.js","components/redux/contacts/contacts-actions.js","components/Alert/Alert.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/ContactList/ContactList.container.js","App.js","components/redux/contacts/contacts-reducer.js","components/redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Title","title","level","TagNameTitle","CSSTransition","in","appear","timeout","classNames","appearStyles","unmountOnExit","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","clearFilter","changeFilter","Alert","text","Text","ContactForm","state","error","textAlert","inputNameId","inputNumberId","handleSubmit","e","preventDefault","props","contacts","some","contact","showAlert","onSubmit","reset","setState","setTimeout","handlerChange","currentTarget","value","this","alertStyle","form","label","htmlFor","input","type","placeholder","onChange","button","Component","connect","items","dispatch","contactsActions","filter","event","target","inputFilterId","filterWrapper","ContactItem","onDeleteContact","listItem","onClick","ContactList","TransitionGroup","component","contactList","map","fadeStyles","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","includes","contactsAction","Wrapper","appearFormStyles","length","searchFadeStyles","onExit","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.22bf286e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__2MW7t\",\"enterActive\":\"fade_enterActive__3epY2\",\"exit\":\"fade_exit__iwm-C\",\"exitActive\":\"fade_exitActive__2XNsK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper___WCFk\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactItem_text__2iGCr\",\"button\":\"ContactItem_button__1siMh\",\"listItem\":\"ContactItem_listItem__ZX0Xm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Alert_Container__3DNpE\",\"Text\":\"Alert_Text__333Rp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"appearFormStyles_appear__3kuaH\",\"appearActive\":\"appearFormStyles_appearActive__onMo8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"searchFadeStyles_enter__32As0\",\"enterActive\":\"searchFadeStyles_enterActive__16J8M\",\"exit\":\"searchFadeStyles_exit__2Hv6m\",\"exitActive\":\"searchFadeStyles_exitActive__za5rA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"App_Wrapper__2FdRQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"appear_appear__2WbUp\",\"appearActive\":\"appear_appearActive__aZqhF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__3cQPx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeAlertStyle_enter__1-WVA\",\"enterActive\":\"fadeAlertStyle_enterActive__PviJ5\",\"exit\":\"fadeAlertStyle_exit__2JoXG\",\"exitActive\":\"fadeAlertStyle_exitActive__2VgjB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\"};","import React from 'react'\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={styles.container}>{children}</div>;\n};\n\nexport default Container;\n","import React from 'react'\nimport { CSSTransition } from 'react-transition-group';\nimport appearStyles from '../transitionsStyles/appear.module.css';\nimport PropTypes from 'prop-types';\nimport styles from './Title.module.css';\n\nconst Title = ({ title, level = 1 }) => {\n  const TagNameTitle = `h${level}`;\n  return (\n      <CSSTransition in ={true} appear={true} timeout={500} classNames={appearStyles} unmountOnExit>\n          <TagNameTitle className={styles.Title}>{title}</TagNameTitle>\n      </CSSTransition>\n    )\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  level: PropTypes.number.isRequired,\n};\n\nexport default Title;\n","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst addContact = createAction('contacts/add', (name, number) => ({\n    payload: {\n      id: shortid.generate(),\n      name,\n      number,\n    },\n}));\n\nconst deleteContact = createAction('contacts/delete');\nconst clearFilter = createAction('contacts/clearFilter');\nconst changeFilter = createAction('contacts/changeFilter');\n// eslint-disable-next-line\nexport default { addContact, deleteContact, clearFilter, changeFilter };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Alert.module.css';\n\nconst Alert = ({text}) => {\n  return (\n    <div className={styles.Container}>\n      <p className={styles.Text}>{text}</p>\n    </div>\n  );\n};\n\nAlert.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Alert;","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport contactsActions from '../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\nimport shortid from 'shortid';\nimport Alert from '../Alert';\nimport alertStyle from '../transitionsStyles/fadeAlertStyle.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n    error: false,\n    textAlert: '',\n  };\n\n  inputNameId = shortid.generate();\n  inputNumberId = shortid.generate();\n\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    e.preventDefault();\n\n    if (name === '') {\n      this.showAlert('Please enter your contact name!');\n      return;\n    }\n\n    if (number === '') {\n      this.showAlert('Please enter the contact phone number!');\n      return;\n    }\n\n     if (this.props.contacts.some(contact => contact.name === name)) {\n       this.showAlert(`${name} is already in contacts`);\n       return;\n    }\n\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  showAlert = (text) => {\n    this.reset();\n    this.setState({ error: true, textAlert: text });\n    setTimeout(() => this.setState({ error: false}), 2000);\n \n}\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  handlerChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { error, textAlert } = this.state;\n\n    return (\n      <>\n        <CSSTransition in={error} classNames={alertStyle} timeout={250} unmountOnExit>\n          <Alert text={textAlert}/>\n        </CSSTransition>\n\n        <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.label} htmlFor={this.inputNameId}>\n          <span>\n            Name   \n          </span>\n        </label>\n        <input\n          className={styles.input}\n          type=\"text\"\n          id={this.inputNameId}\n          value={this.state.name}\n          name=\"name\"\n          placeholder=\"Enter your name\"\n          // required\n          onChange={this.handlerChange}\n        />\n        <label className={styles.label} htmlFor={this.inputNumberId}>\n          <span>\n            Number   \n          </span>\n        </label>\n        <input\n          className={styles.input}\n          type=\"tel\"\n          id={this.inputNumberId}\n          value={this.state.number}\n          name=\"number\"\n          placeholder=\"Enter your number\"\n          onChange={this.handlerChange}\n        />\n        <button className={styles.button}>Add contact</button>\n      </form>\n      </>\n      \n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(contactsActions.addContact(name, number))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport contactsActions from '../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport shortid from 'shortid';\n\nconst Filter = ({ name, onChange }) => {\n  let inputFilterId = shortid.generate();\n  return (\n    <div className={styles.filterWrapper}>\n      <label className={styles.label} htmlFor={inputFilterId}>\n        <span>\n          Find contacts by name\n        </span>\n      </label>\n      <input\n        className={styles.input}\n        type=\"text\"\n        placeholder=\"Search\"\n        id={inputFilterId}\n        value={name}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  name: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(contactsActions.changeFilter(event.target.value)),\n  // clearFilter: () => dispatch(contactsActions.clearFilter('')),\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react'\n\nimport styles from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, onDeleteContact }) => {\n  return (\n    <>\n      <li className={styles.listItem}>\n        <p className={styles.text}>\n          {name} : {number}\n        </p>\n        <button className={styles.button} type=\"button\" onClick={onDeleteContact}>\n          Delete\n        </button>\n      </li>    \n    </>\n  );\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport styles from './ContactList.module.css';\nimport fadeStyles from '../transitionsStyles/fade.module.css';\nimport ContactItem from '../ContactItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <TransitionGroup component=\"ul\"  className={styles.contactList}>\n      {contacts.map(({ name, number, id }) => (\n        <CSSTransition key={id} timeout={250} classNames={fadeStyles}>\n          <ContactItem name={name} number={number} key={id} onDeleteContact={() => onDeleteContact(id)} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\n ContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n\n","import { connect } from 'react-redux';\nimport contactsActions from '../redux/contacts/contacts-actions';\nimport ContactList from './ContactList';\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  \n  let contacts = allContacts.filter(({name}) => name.toLowerCase().includes(normalizedFilter));\n    //  if (!contacts.length) contacts = allContacts;\n    return contacts\n  };\n\nconst mapStateToProps = ({contacts: {items, filter}}) => ({\n  contacts: getVisibleContacts(items,  filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: (id) => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport appearFormStyles from './components/transitionsStyles/appearFormStyles.module.css';\nimport fadeStyles from './components/transitionsStyles/fade.module.css';\nimport searchFadeStyles from './components/transitionsStyles/searchFadeStyles.module.css';\nimport styles from './App.module.css';\nimport Container from './components/Container';\nimport Title from './components/Title';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport contactsAction from './components/redux/contacts/contacts-actions';\n\nconst App = ({ contacts, clearFilter }) => {\n  return (\n    <Container>\n      <div className={styles.Wrapper}>\n        <Title title=\"Phonebook\" level={1} />\n        <CSSTransition in={true} appear={true} timeout={500} classNames={appearFormStyles} unmountOnExit>\n          <ContactForm  />\n        </CSSTransition>\n        <Title title=\"Contacts\" level={2} />\n        <CSSTransition in={contacts.length > 1 } classNames={searchFadeStyles} timeout={250} unmountOnExit  onExit={() => clearFilter()}>\n          <Filter  />\n        </CSSTransition>\n        <CSSTransition in={contacts.length !== 0} classNames={fadeStyles} timeout={250} unmountOnExit>\n          <ContactList  />\n        </CSSTransition>\n      </div>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state =>({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    clearFilter: () => dispatch(contactsAction.changeFilter('')),\n  };\n};\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\n// onSubmit={this.addContact}\n// contacts={visibleContacts} onDeleteContact={this.deleteContact}\n// value={filter} onChange={this.changeFilter}","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst items = createReducer([], {\n\n  [actions.addContact]: (state, {payload}) => [...state, payload],\n  [actions.deleteContact]: (state, {payload}) => state.filter(({id}) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n})","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'\nimport logger from 'redux-logger';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [...getDefaultMiddleware({\n  serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n}\n\n//development or production\n// console.log(process.env.NODE_ENV);\nconst store = configureStore({\n  reducer: {\n  contacts: persistReducer (contactsPersistConfig, contactsReducer),\n},\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n// eslint-disable-next-line\nexport default {store, persistor};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './App';\nimport store from './components/redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>  \n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}